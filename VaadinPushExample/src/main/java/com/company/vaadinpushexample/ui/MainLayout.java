
package com.company.vaadinpushexample.ui;

import java.util.stream.IntStream;

import com.rapidclipse.framework.server.Rap;
import com.rapidclipse.framework.server.navigation.Navigation;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.page.Push;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.InitialPageSettings;
import com.vaadin.flow.server.PageConfigurator;
import com.vaadin.flow.shared.communication.PushMode;


@Route("")
@Push(value = PushMode.MANUAL)
public class MainLayout extends VerticalLayout implements PageConfigurator
{
	public MainLayout()
	{
		super();
		this.initUI();
	}
	
	@Override
	public void configurePage(final InitialPageSettings settings)
	{
		settings.addLink("shortcut icon", "frontend/images/favicon.ico");
		settings.addFavIcon("icon", "frontend/images/favicon256.png", "256x256");
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		Navigation.navigateTo(SecondWindow.class);
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #btnStartRequest}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnStartRequest_onClick(final ClickEvent<Button> event)
	{
		IntStream.range(1, 10).forEach(i -> {
			try
			{
				this.label.setText("Durchlauf Nr. " + i);
				Thread.sleep(1000);
			}
			catch(final InterruptedException e)
			{
				e.printStackTrace();
			}
		});
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button2}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button2_onClick(final ClickEvent<Button> event)
	{
		final UI current = UI.getCurrent();
		
		Rap.getExecutorService().execute(() -> {
			IntStream.range(1, 10).forEach(i -> {
				current.access(() -> {
					try
					{
						this.label.setText("Durchlauf Nr. " + i);
						Thread.sleep(1000);
						UI.getCurrent().push();
					}
					catch(final InterruptedException e)
					{
						e.printStackTrace();
					}
				});
			});
		});

	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.horizontalLayout = new HorizontalLayout();
		this.btnStartRequest  = new Button();
		this.button2          = new Button();
		this.label            = new Label();
		this.button           = new Button();

		this.btnStartRequest.setText("Start Block Request");
		this.button2.setText("Start Thread Request");
		this.label.setText("Label");
		this.button.setText("Zur n√§chsten Seite");

		this.btnStartRequest.setSizeUndefined();
		this.button2.setSizeUndefined();
		this.horizontalLayout.add(this.btnStartRequest, this.button2);
		this.horizontalLayout.setWidthFull();
		this.horizontalLayout.setHeight(null);
		this.label.setSizeUndefined();
		this.button.setSizeUndefined();
		this.add(this.horizontalLayout, this.label, this.button);
		this.setSizeFull();

		this.btnStartRequest.addClickListener(this::btnStartRequest_onClick);
		this.button2.addClickListener(this::button2_onClick);
		this.button.addClickListener(this::button_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private Button           btnStartRequest, button2, button;
	private HorizontalLayout horizontalLayout;
	private Label            label;
	// </generated-code>
	
}
